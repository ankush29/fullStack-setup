{"ast":null,"code":"import _classCallCheck from \"/Users/ankushsaini/fullStack-setup/fullStack-setup/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ankushsaini/fullStack-setup/fullStack-setup/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ankushsaini/fullStack-setup/fullStack-setup/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ankushsaini/fullStack-setup/fullStack-setup/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ankushsaini/fullStack-setup/fullStack-setup/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ankushsaini/fullStack-setup/fullStack-setup/src/components/CalendarHeader.js\";\nimport React from \"react\";\nimport { data } from \"../../src/config\";\n\nvar CalendarHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CalendarHeader, _React$Component);\n\n  function CalendarHeader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CalendarHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CalendarHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      yearList: []\n    };\n\n    _this.prevYearRange = function () {\n      var yearList = _this.state.yearList.map(function (item) {\n        return item - 9;\n      });\n\n      _this.setState({\n        yearList: yearList\n      });\n    };\n\n    _this.nextYearRange = function () {\n      var yearList = _this.state.yearList.map(function (item) {\n        return item + 9;\n      });\n\n      _this.setState({\n        yearList: yearList\n      });\n    };\n\n    _this.getMonths = function () {\n      var months = _this.renderMonths();\n\n      _this.props.setDate(_this.props.currentMonth, months);\n\n      _this.setState({\n        yearList: []\n      });\n    };\n\n    _this.renderMonths = function () {\n      if (!_this.props.monthList.length) {\n        return Object.keys(data.months).map(function (item, index) {\n          return React.createElement(\"div\", {\n            className: \"col\",\n            key: index,\n            onClick: function onClick() {\n              _this.setMonth(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, data.months[item]);\n        });\n      }\n    };\n\n    _this.setMonth = function (month) {\n      var year = _this.props.currentMonth.getFullYear();\n\n      _this.props.setDate(new Date(year, month, 1), []);\n    };\n\n    _this.prevMonth = function () {\n      var _this$props = _this.props,\n          monthList = _this$props.monthList,\n          currentMonth = _this$props.currentMonth;\n\n      _this.props.setDate(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1), monthList);\n    };\n\n    _this.nextMonth = function () {\n      var _this$props2 = _this.props,\n          monthList = _this$props2.monthList,\n          currentMonth = _this$props2.currentMonth;\n\n      _this.props.setDate(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1), monthList);\n    };\n\n    _this.getYear = function () {\n      var currentMonth = _this.props.currentMonth;\n      var currentYear = currentMonth.getFullYear();\n      var years = [];\n\n      if (!_this.state.yearList.length) {\n        for (var i = currentYear - 4; i <= currentYear + 4; i++) {\n          years.push(i);\n        }\n      }\n\n      _this.setState({\n        yearList: [].concat(years)\n      });\n\n      _this.props.setDate(currentMonth, []);\n    };\n\n    return _this;\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"setYear\",\n    value: function setYear(year) {\n      var month = this.props.currentMonth.getMonth();\n      var months = this.renderMonths();\n      this.props.setDate(new Date(year, month, 1), months);\n      this.setState({\n        yearList: []\n      });\n    }\n  }, {\n    key: \"headerType\",\n    value: function headerType() {\n      var _this2 = this;\n\n      var yearRangeLength = this.state.yearList.length;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.yearList.length ? React.createElement(\"div\", {\n        className: \"year-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \" \", this.state.yearList[0] + '-' + this.state.yearList[yearRangeLength - 1], \" \") : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"col col-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.monthList.length ? null : React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"chevron_left\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.monthList.length ? React.createElement(\"span\", {\n        onClick: function onClick() {\n          _this2.getYear();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.currentMonth.getFullYear()) : React.createElement(\"span\", {\n        onClick: function onClick() {\n          _this2.getMonths();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, data.months[this.props.currentMonth.getMonth()] + ' ' + this.props.currentMonth.getFullYear())), this.props.monthList.length ? null : React.createElement(\"div\", {\n        className: \"col col-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"chevron_right\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"header row flex-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.headerType(), React.createElement(\"div\", {\n        className: \"row month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.monthList), this.state.yearList.length ? React.createElement(\"div\", {\n        className: \"row icon-parent \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevYearRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"chevron_left\"), this.state.yearList.map(function (item, index) {\n        return React.createElement(\"div\", {\n          className: \"col\",\n          key: index,\n          onClick: function onClick() {\n            _this3.setYear(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"div\", {\n        className: \"icon right\",\n        onClick: this.nextYearRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"chevron_right\")) : null);\n    }\n  }]);\n\n  return CalendarHeader;\n}(React.Component);\n\nexport { CalendarHeader as default };","map":{"version":3,"sources":["/Users/ankushsaini/fullStack-setup/fullStack-setup/src/components/CalendarHeader.js"],"names":["React","data","CalendarHeader","state","yearList","prevYearRange","map","item","setState","nextYearRange","getMonths","months","renderMonths","props","setDate","currentMonth","monthList","length","Object","keys","index","setMonth","month","year","getFullYear","Date","prevMonth","getMonth","nextMonth","getYear","currentYear","years","i","push","yearRangeLength","headerType","setYear","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {data} from \"../../src/config\";\n\nexport default class CalendarHeader extends React.Component {\n\n  state = {\n    yearList: []\n  };\n\n  prevYearRange = () => {\n    let yearList = this.state.yearList.map((item) => item - 9)\n    this.setState({yearList})\n  }\n\n  setYear(year) {\n    const month = (this.props.currentMonth).getMonth();\n    let months = this.renderMonths();\n    this.props.setDate(new Date(year, month, 1), months)\n    this.setState({\n      yearList: []\n    })\n  }\n\n  nextYearRange = () => {\n    let yearList = this.state.yearList.map((item) => item + 9)\n    this.setState({yearList})\n  }\n\n\n  getMonths = () => {\n    let months = this.renderMonths();\n    this.props.setDate(this.props.currentMonth, months)\n    this.setState({\n      yearList: [],\n    })\n  }\n\n  renderMonths = () => {\n    if(!this.props.monthList.length) {\n      return Object.keys(data.months).map((item, index) => {\n        return (<div className=\"col\" key={index} onClick={() => {this.setMonth(item)}}>{data.months[item]}</div>)\n      })\n    }\n  }\n\n  setMonth = (month) => {\n    let year = (this.props.currentMonth).getFullYear();\n    this.props.setDate(new Date(year, month, 1), [])\n  }\n\n  headerType() {\n    const yearRangeLength = this.state.yearList.length\n    return(\n      <React.Fragment>\n        {this.state.yearList.length ? <div className=\"year-col\"> {this.state.yearList[0]+'-'+this.state.yearList[yearRangeLength-1]} </div> :\n          (<React.Fragment> <div className=\"col col-start\">\n            {this.props.monthList.length ? null : <div className=\"icon\" onClick={this.prevMonth}>\n              chevron_left\n            </div>}\n          </div>\n          <div className=\"col col-center\">\n            {this.props.monthList.length\n              ? <span onClick={() => {this.getYear()}}>\n                {(this.props.currentMonth).getFullYear()}\n              </span>\n              : <span onClick={() => {this.getMonths()}}>\n                {data.months[(this.props.currentMonth).getMonth()] + ' ' + (this.props.currentMonth).getFullYear()}\n              </span>\n            }\n          </div>\n          {this.props.monthList.length ? null : <div className=\"col col-end\">\n            <div className=\"icon\" onClick={this.nextMonth}>chevron_right</div>\n          </div>}</React.Fragment>)\n        }\n      </React.Fragment>\n    )\n  }\n\n  prevMonth = () => {\n    const { monthList, currentMonth } = this.props;\n    this.props.setDate(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1), monthList)\n  };\n\n  nextMonth = () => {\n    const { monthList, currentMonth } = this.props;\n    this.props.setDate(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1), monthList)\n  };\n\n  getYear = () => {\n    const { currentMonth } = this.props;\n    const currentYear = currentMonth.getFullYear();\n    let years = [];\n    if(!this.state.yearList.length) {\n      for(let i = currentYear-4; i <= currentYear+4; i++) {\n        years.push(i)\n      }\n    }\n    this.setState({\n      yearList: [...years],\n    })\n    this.props.setDate(currentMonth, [])\n  }\n\n  render() {\n    return (\n      <div className=\"header row flex-middle\">\n        {this.headerType()}\n        <div className=\"row month\">{this.props.monthList}</div>\n        { this.state.yearList.length ? <div className=\"row icon-parent \">\n          <div className=\"icon\" onClick={this.prevYearRange}>\n            chevron_left\n          </div>\n          {this.state.yearList.map((item, index) => {\n            return(\n              <div className=\"col\" key={index} onClick={() => {this.setYear(item)}}>\n                {item}\n              </div>\n            )\n          })}\n          <div className=\"icon right\" onClick={this.nextYearRange}>\n            chevron_right\n          </div>\n        </div> : null }\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}